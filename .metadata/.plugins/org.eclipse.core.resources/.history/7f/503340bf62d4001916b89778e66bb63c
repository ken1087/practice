package com.cos.pratice.dao;

import java.util.ArrayList;

import java.util.LinkedHashMap;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;
import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import org.springframework.stereotype.Repository;

import com.cos.pratice.domain.Users;
import com.cos.pratice.domain.UsersPk;
import com.cos.pratice.util.MyQuery;
import com.cos.pratice.util.ProPertySource;
import com.cos.pratice.util.Util;


@Repository
public class UserDAO{
	

	public void sava(Users user, UsersPk userpk){
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("hello");
		EntityManager em = emf.createEntityManager();
		EntityTransaction tx = em.getTransaction();

		tx.begin();
		System.out.println("트랜잭션 시작");
		try {
			System.out.println("insert start");
			Users u = new Users();
			u.setUserpk(userpk);
			u.setName(user.getName());
			u.setPassword(user.getPassword());
			u.setEmail(user.getEmail());
			u.setAddr(user.getAddr());
			u.setTitle(user.getTitle());
			u.setContent(user.getContent());
			u.setCountry(user.getCountry());
			u.setGender(user.getGender());
			u.setCreateDate(user.getCreateDate());
			u.setUpdateDate(user.getUpdateDate());
			
			em.persist(u);
			tx.commit();
			System.out.println("commit complete");
		}catch (Exception e) {
			System.out.println("실패");
		}finally {
			em.close();
		}
		emf.close();
	}


	public List<LinkedHashMap<String, Object>> findAllList(){
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("hello");
		EntityManager em = emf.createEntityManager();
	
		ApplicationContext context = new AnnotationConfigApplicationContext(ProPertySource.class);
		MyQuery qry = context.getBean("myquery", MyQuery.class);
		String jpql = qry.getSelectall();
		
		try {
			List<LinkedHashMap<String, Object>> hashlist = new ArrayList<LinkedHashMap<String,Object>>();
			TypedQuery<Users> query =  em.createQuery(jpql, Users.class);
				System.out.println("getResultList : "+ query.getResultList().size());
				System.out.println((List<Users>)query.getResultList());
				
				List<Users> list = (List<Users>)query.getResultList();
				Util util = new Util();
				hashlist = util.hash(list);
				
			return hashlist;
			
		}catch (Exception e) {
			System.out.println("실패");
		}finally {
			em.close();
		}
		emf.close();
		
		return null;	
	}
	
}
